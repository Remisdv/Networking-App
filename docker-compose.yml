services:
  traefik:
    image: traefik:v2.11
    command:
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--api.dashboard=true'
    ports:
      - '80:80'
      - '8081:8080'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    networks:
      - alt-platform

  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-alt_platform}
      POSTGRES_USER: ${POSTGRES_USER:-alt}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-alt}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-alt} -d ${POSTGRES_DB:-alt_platform}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - alt-platform

  api:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.api
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - apps/api/.env
    environment:
      NODE_ENV: production
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USER: ${POSTGRES_USER:-alt}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD:-alt}
      DATABASE_NAME: ${POSTGRES_DB:-alt_platform}
    ports:
      - '3000:3000'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.alt-api.rule=Host(`api.localhost`)'
      - 'traefik.http.routers.alt-api.entrypoints=web'
      - 'traefik.http.services.alt-api.loadbalancer.server.port=3000'
    networks:
      - alt-platform

  web:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.web
    depends_on:
      - api
    environment:
      NODE_ENV: production
    ports:
      - '8085:80'
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.alt-web.rule=Host(`app.localhost`)'
      - 'traefik.http.routers.alt-web.entrypoints=web'
    networks:
      - alt-platform

  web-dev:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.web.dev
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/web/node_modules
      - /app/packages/ui/node_modules
    ports:
      - '5173:5173'
    environment:
      NODE_ENV: development
      VITE_API_BASE_URL: 'http://localhost:3000'
      CHOKIDAR_USEPOLLING: 'true'
      WATCHPACK_POLLING: 'true'
    depends_on:
      - api

networks:
  alt-platform:
    driver: bridge

volumes:
  postgres-data:



